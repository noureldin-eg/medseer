version: "3.9"

services:
  db:
    image: docker.io/library/postgres:14.2-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data:z,U
    environment:
      - PGUSER=postgres
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
  web:
    image: medseer:1
    # command: gunicorn --log-level debug --env DJANGO_SETTINGS_MODULE=pythondjangoapp.settings.production pythondjangoapp.wsgi -b 0.0.0.0:8080
    command: python3 manage.py runserver 0.0.0.0:8080
    volumes:
      - ./data/xmls:/opt/app-root/src/media/xmls:z,U
      - ./data/pdfs:/opt/app-root/src/media/pdfs:z,U
    ports:
      - "8080:8080"
    environment:
      - DJANGO_SETTINGS_MODULE=pythondjangoapp.settings.production
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      migrate:
        condition: service_completed_successfully
      db:
        condition: service_healthy
  migrate:
    image: medseer:1
    command: python3 manage.py migrate
    environment:
      - DJANGO_SETTINGS_MODULE=pythondjangoapp.settings.production
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      db:
        condition: service_healthy
  createsuperuser:
    image: medseer:1
    command: python3 manage.py createsuperuser --no-input
    environment:
      - DJANGO_SETTINGS_MODULE=pythondjangoapp.settings.production
      - DJANGO_SUPERUSER_USERNAME=admin
      - DJANGO_SUPERUSER_PASSWORD=admin
      - DJANGO_SUPERUSER_EMAIL=admin@medseer.com
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DATABASE=postgres
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
    depends_on:
      migrate:
        condition: service_completed_successfully
      db:
        condition: service_healthy
